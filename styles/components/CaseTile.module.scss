.caseTile {
  --logo-size: 30px;
  width: 100%;
  border-radius: 10px;
  overflow: visible;
  background: transparent;
  perspective: 1200px;
  cursor: pointer;
  display: block;
}

/* allow per-tile override using data attribute (modern browsers) */
.caseTile[data-logo-size] {
  /* accepts values like "48px" */
  --logo-size: attr(data-logo-size);
}

/* inner 3D container */
.inner {
  position: relative;
  width: 100%;
  border-radius: 10px;
  transform-style: preserve-3d;
  transition: transform 420ms cubic-bezier(.2,.8,.2,1), box-shadow 240ms;
  box-shadow: 0 6px 18px var(--shadow-muted, rgba(0,0,0,0.04));

  /* ensure the inner container has height so absolute faces are visible */
}

/* flip on hover / focus-within */
.caseTile:hover .inner,
.caseTile:focus-within .inner {
  transform: rotateY(180deg);
  box-shadow: 0 18px 48px var(--shadow-hover, rgba(0,0,0,0.10));
  /* 1px visible border effect without layout shift */
  outline: 1px solid var(--color-text, #000);
  outline-offset: -1px;
}

/* shared face styles (keep absolute so they overlap) */
.front, .back {
  position: absolute;
  inset: 0;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  border-radius: 10px;
  overflow: hidden;
}

/* front face (image with bottom overlay) */
.front {
  position: relative;
  overflow: hidden;
  border-radius: 10px;
  z-index: 2;
}

/* media / cover: next/image fill parent requires position: relative */
.media {
  position: relative;
  width: 100%;
  padding-top: 62.5%; /* keep aspect ratio */
}

.cover {
  position: absolute;
  inset: 0;
}

/* bottom gradient overlay anchored to image bottom (tokens used with fallbacks) */
.overlay {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0.85rem 0.85rem;
  background: linear-gradient(
    to top,
    var(--color-overlay-85, rgba(0,0,0,0.85)) 0%,
    var(--color-overlay-65, rgba(0,0,0,0.65)) 55%,
    var(--color-overlay-35, rgba(0,0,0,0.35)) 75%,
    var(--color-overlay-0, rgba(0,0,0,0)) 100%
  );
  display: flex;
  align-items: center;
}

/* row: logo + company + role on same line */
.row {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  width: 100%;
}

/* rounded small logo */
.logoSmall {
  width: var(--logo-size);
  height: var(--logo-size);
  border-radius: 50%;
  overflow: hidden;
  flex: 0 0 var(--logo-size, 40px);
  background: var(--color-logo-bg, rgba(255,255,255,1));
  padding: 0.25em;
}

/* make sure images inside cover/logo use cover */
.logoSmall :global(img),
.media :global(img) {
  object-fit: cover;
  width: 100%;
  height: auto !important;
  display: block;
}

/* title meta inline, text visible on dark gradient */
.titleMeta {
  display: flex;
  flex-direction: column;
  gap: 0;
  color: var(--color-on-surface, #fff);
  min-width: 0;
  overflow: hidden;
}

.company {
  margin: 0;
  font-size: 0.95rem;
  font-weight: 700;
  color: var(--color-on-surface, #fff);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.role {
  font-size: 0.85rem;
  font-weight: 500;
  color: rgba(var(--color-on-surface-rgb, 255,255,255), 0.85);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* BACK face (rotated) */
.back {
  transform: rotateY(180deg);
  background: var(--color-surface, #fff);
  color: var(--color-text, #000);
  padding: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

/* back top: logo + company + role same line */
.backHeader {
  display: flex;
  align-items: center;
  gap: 0.75rem;

  /* keep background as-is (don't make it dark) â€” only change the text color */
  background: transparent;
  padding: 0;
  border-radius: 0;
}

/* ensure company/role text on the back are tokenized */
.backHeader .company,
.backHeader .role {
  color: var(--color-text, #000);
}

/* keep logo styling consistent */
.backHeader .logoSmall {
  background: var(--color-logo-bg, rgba(255,255,255,1));
}

/* description area */
.description {
  margin: 0.75rem 0 0.75rem 0;
  color: var(--color-muted, rgba(0,0,0,0.7));
  font-size: 0.9rem;
  line-height: 1.35;
  flex: 1 1 auto;
}

/* footer area with view button at bottom-right */
.backFooter {
  margin-top: auto;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 0.5rem;
}

.viewBtn {
  display: inline-flex;
  align-items: center;
  gap: 0.6rem;
  background: transparent;
  border: 0;
  cursor: pointer;
  padding: 0.45rem 0.6rem;
  color: var(--color-text); /* keep arrow/text black via token */
}

.viewText {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}

/* arrow used inside the back face (ArrowIcon) */
.arrowChar {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 1rem;
  height: 1rem;
  margin-left: 0.4rem;
  will-change: transform;
}

.arrowChar svg {
  width: 100%;
  height: 100%;
  display: block;
  stroke: currentColor; /* keep color as-is (inherits) */
}

/* ping-pong horizontal motion used when the card is flipped.
   Trigger on hover/focus and when a programmatic .is-flipped class exists. */
@keyframes arrow-flip-bounce {
  0%   { transform: translateX(0); }
  50%  { transform: translateX(6px); }
  100% { transform: translateX(0); }
}

/* run animation only when the back face is visible (on hover, focus-within or .is-flipped) */
.caseTile:hover .back .arrowChar,
.caseTile:focus-within .back .arrowChar,
.caseTile.is-flipped .back .arrowChar {
  animation: arrow-flip-bounce 700ms ease-in-out infinite;
}

/* respect reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  .caseTile:hover .back .arrowChar,
  .caseTile:focus-within .back .arrowChar,
  .caseTile.is-flipped .back .arrowChar {
    animation: none;
    transform: translateX(0);
  }
}

/* responsive adjustments */
@media (max-width: 880px) {
  .media { padding-top: 75%; }
  .overlay { padding: 0.5rem 0.75rem; }
}

@media (max-width: 540px) {
  .media { padding-top: 62.5%; }
  .overlay { padding: 0.45rem 0.6rem; }
  .company { font-size: 0.92rem; }
}

@media (max-width: 1280px) {
    .media{
        padding-top: 250px
    }
}